<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.classs.skhuter.mappers.NoticeMapper">
	
	<!-- 투표 -->
	<select id="getIsVoteNo" parameterType="VoteList" resultType="int">
		select count(select_item)
		from VOTE_LIST
		where VOTE_NO = #{voteNo} and USER_NO = #{userNo}
	</select>
	
	<!-- 투표 불러오기 -->
	<select id="readDoingVote" resultType="Vote">
		SELECT vote_no as voteNo ,user_no as userNo,enroll_date as
		enrollDate,start_date as startDate,end_date as endDate, title,
		content, item1, item2, item3, item4, item5, item6, item1_count as item1Count,item2_count as item2Count,item3_count as item3Count,item4_count as item4Count,item5_count as item5Count,item6_count as item6Count
		FROM VOTE
		WHERE end_date >= TO_CHAR(sysdate,'YYYY-MM-DD hh24:mi')
		order by start_date desc
	</select>
	
	<!-- 완료된 투표 불러오기 -->
	<select id="readDoneVote" resultType="Vote">
	<![CDATA[
		SELECT vote_no as voteNo ,user_no as userNo,enroll_date as
		enrollDate,start_date as startDate,end_date as endDate, title,
		content, item1, item2, item3, item4, item5, item6, item1_count as item1Count,item2_count as item2Count,item3_count as item3Count,item4_count as item4Count,item5_count as item5Count,item6_count as item6Count
		FROM VOTE
		WHERE end_date < TO_CHAR(sysdate,'YYYY-MM-DD hh24:mi')
		order by start_date desc
	]]>
	</select>
	
	
	<!-- 투표 숫자 올리기 -->
	<update id="upVote">
	
	UPDATE vote
	SET item1_count = #{item1Count}, item2_count = #{item2Count},item3_count = #{item3Count},item4_count = #{item4Count}, item5_count = #{item5Count}, item6_count = #{item6Count}
	WHERE vote_no=#{voteNo}
	
	</update>
	
	<!-- 투표 몇개 했는지 세기 -->
	<select id="countVote" parameterType="VoteList" resultType="int">
	SELECT COUNT(select_item) 
	from VOTE_LIST 
	where vote_no = #{voteNo} and user_no= #{userNo}
	</select>
	
	<!-- 몇명 투표했는지 세기 -->
	<select id="getJoinCount" parameterType="VoteList" resultType="int">
	select count(user_no)
	from VOTE_LIST
	where vote_no=#{voteNo}
	</select>
	
	
	<!-- 투표 등록 -->
	<insert id="registVote">
		INSERT INTO Vote
		(vote_no, user_no, title, enroll_date, start_date, end_date, content, item1,
		item2, item3, item4, item5, item6)
		VALUES (seq_Vote.nextVal,
		#{userNo},#{title},sysdate,TO_DATE(#{startDate},'yyyy-MM-dd
		hh24:mi'),TO_DATE(#{endDate}, 'yyyy-MM-dd
		hh24:mi'),#{content},#{item1},#{item2},#{item3},#{item4},#{item5},#{item6})
	</insert>

	<!-- 투표 삭제 -->
	<delete id="deleteVote">
		DELETE FROM Vote
		WHERE vote_no = #{voteNo}
	</delete>

	<!-- 투표 내역 -->
	
	<!-- 내역 등록 -->
	<insert id="doVote">
		INSERT INTO Vote_list
		(vote_list_no, vote_no, user_no, select_item)
		VALUES
		(seq_Vote_List.nextVal,#{voteNo},#{userNo},#{selectItem})
	</insert>
	

	<!-- 회계 내역 -->

	<!-- 회계 내역 등록 -->
	<insert id="insertAccounting">
		INSERT INTO Accounting
		(account_no, user_no,
		account_date, content, status, price, file_name, uuid_name)
		VALUES
		(seq_Accounting.nextVal,#{userNo},sysdate,#{content},#{status},#{price},#{fileName},#{uuidName})
	</insert>

	<!-- 회계 내역 삭제 -->
	<delete id="deleteAccounting">
		DELETE FROM Accounting
		WHERE Account_no = #{accountNo}
	</delete>

	<!-- 	회계 내역 전체 조회 -->
	<select id="accountingListAll" resultType="Accounting">
		SELECT account_no as accountNo, user_no as userNo, account_date as accountDate, content, status, price, file_name as fileName, uuid_name as uuidName
		FROM Accounting
		order by account_no desc, account_date desc
	</select>

	<select id="accountingListPage" resultType="Accounting">
		<![CDATA[
		select accountNo1 as accountNo, userNo1 as userNo, accountDate1 as accountDate, content1 as content, status1 as status, price1 as price, fileName1 as fileName, uuidName1 as uuidName
		FROM(
    		SELECT a.account_no as accountNo1, a.user_no as userNo1, a.account_date as 
			accountDate1, a.content as content1, a.status as status1, a.price as price1, a.file_name as fileName1, a.uuid_name as uuidName1
    		,row_number() over (order by account_no desc) as num
    		FROM Accounting a
    	)
		WHERE num between #{page} and 10
		]]>
	</select>
	
	<select id="accountingListCriteria" resultType="Accounting">
		<![CDATA[
		select accountNo1 as accountNo, userNo1 as userNo, accountDate1 as accountDate, content1 as content, status1 as status, price1 as price, fileName1 as fileName, uuidName1 as uuidName
		FROM(
    		SELECT a.account_no as accountNo1, a.user_no as userNo1, a.account_date as 
			accountDate1, a.content as content1, a.status as status1, a.price as price1, a.file_name as fileName1, a.uuid_name as uuidName1
    		,row_number() over (order by account_no desc, account_date desc) as num
    		FROM Accounting a
    	)
		WHERE num between #{pageStart} and #{perPageNum}
		]]>
	</select>
	
	<select id="accountingListCountPaging" resultType="int">
		<![CDATA[
		select
			count(account_no)
		from
			Accounting
		where
			account_no > 0
		]]>
	</select>
	
	
	<!-- 스튜스케줄 -->
	<!-- 스케줄등록 -->
	<insert id="insertStuSchedule">
INSERT INTO School_schedule (school_schedule_no, content,start_date,end_date) 
VALUES (seq_School_schedule.nextVal, #{content},TO_DATE(#{startDate},'yyyy-MM-dd
		hh24:mi'),TO_DATE(#{endDate}, 'yyyy-MM-dd
		hh24:mi'))
</insert>
<!-- 스케줄 불러오기 -->
<select id="listAllSchedule" resultType="StuSchedule">
		SELECT school_schedule_no as schoolScheduleNo, content, start_date as startDate, end_date as endDate
		FROM School_schedule
</select>

<!-- 스케줄삭제하기 -->
<delete id="deleteSchedule">
		DELETE FROM School_schedule
		WHERE school_schedule_no = #{schoolScheduleNo}
</delete>
	
	
	
</mapper>